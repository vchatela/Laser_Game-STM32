


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000                 area             moncode, code, readonly
    3 00000000                 export           part
    4 00000000                 export           m2
    5 00000000                 extern           TabSin
    6 00000000                 extern           TabCos
    7 00000000         
    8 00000000         ; données passées en paramètre : @ base signal , valeur 
                       k, @ tabcos ou tabsin
    9 00000000         part    proc
   10 00000000         ; r0 = @ base signal
   11 00000000         ; r1 =  valeur de k
   12 00000000         ; r2 = @ tab   
   13 00000000         ;r3 = somme
   14 00000000         ; r12 = valeur de i
   15 00000000         ; Registre r3 contenant la somme de :
   16 00000000         ; x(i) valeur du signal au temps i
   17 00000000         ; récupérer la valeur du cos/sin (i k 2pi / N)
   18 00000000         ; les multipliers et les metrte dans la somme
   19 00000000 F04F 0300       mov              r3, #0
   20 00000004         ;stocker i dans r12
   21 00000004 F04F 0C00       mov              r12, #0
   22 00000008         ; on calcul ik (mod 2^p)
   23 00000008 B410            push             {r4}
   24 0000000A B420            push             {r5}
   25 0000000C 460C    loop    mov              r4, r1      ; on met k dans r4
   26 0000000E FB04 F40C       mul              r4, r12     ; i * k : pas de dé
                                                            bordement possible
   27 00000012         ; masquage des bits >=  6 (car 64 = 2^6)
   28 00000012 F004 043F       and              r4, #0x3F   ; 0x3F = 0b111111
   29 00000016         ;ici r4 est la valeur du rang dans la table
   30 00000016 F932 4014       ldrsh            r4, [r2, r4, LSL #1] ;on récupè
                                                            re la valeur de tab
                                                             + offset (r4)
   31 0000001A         ; maintenant r4 (cos ik..) * x(i) 
   32 0000001A         ; récupérer x(i)
   33 0000001A F930 501C       ldrsh            r5, [r0, r12, LSL #1] ; LSL car
                                                             même principe que 
                                                            tab
   34 0000001E FB04 F405       mul              r4, r5      ;r4 * x(i)
   35 00000022 4423            add              r3, r4      ; la somme a bien f
                                                            ini sont tour i
   36 00000024         ; on incrémente i
   37 00000024 F10C 0C01       add              r12, #0x1
   38 00000028         ; on teste 64 - i = 0
   39 00000028 F04F 0440       mov              r4, #64
   40 0000002C EBB4 040C       subs             r4, r12
   41 00000030 D1EC            bne              loop        ; branch non equal
   42 00000032         
   43 00000032 BC20            pop{r5}
   44 00000034 BC10            pop{r4}
   45 00000036 4618            mov              r0, r3      ;on met r3 comme va
                                                            leur de retour
   46 00000038 4770            bx               lr          ; dernière instruct
                                                            ion de la fonction
   47 0000003A                 endp
   48 0000003A         
   49 0000003A         
   50 0000003A         m2      proc



ARM Macro Assembler    Page 2 


   51 0000003A         ; r0 = @ base signal
   52 0000003A         ; r1 =  valeur de k
   53 0000003A 4A09            ldr              r2, =TabCos
   54 0000003C         
   55 0000003C B500            push             {LR}
   56 0000003E B401            push             {r0}
   57 00000040 F7FF FFFE       bl               part
   58 00000044         ; on a le résultat du reel dans r0
   59 00000044         
   60 00000044 4602            mov              r2, r0
   61 00000046 BC01            pop{r0}                      ; on remet r0 = @ s
                                                            ignal 
   62 00000048 B404            push             {r2}        ; on a stocké dans 
                                                            la pile le résultat
                                                             de part1 = re(k)
   63 0000004A         
   64 0000004A 4A06            ldr              r2, =TabSin
   65 0000004C F7FF FFFE       bl               part
   66 00000050         
   67 00000050 FB80 2100       smull            r2, r1, r0, r0 ;im^2
   68 00000054 BC01            pop{r0}                      ; on récupère re(k)
                                                            
   69 00000056 FBC0 2100       smlal            r2, r1, r0, r0 ; re^2 + im^2 da
                                                            ns r1 (high) et r2(
                                                            low)
   70 0000005A         ; on a 64 bits signés
   71 0000005A         ; on veut 32 bits de pdids forts signés
   72 0000005A 4608            mov              r0, r1
   73 0000005C BD00            pop{PC}                      ; POP {LR} + bx lr
   74 0000005E                 endp
   75 0000005E         
   76 0000005E         ;
   77 0000005E                 END
              00 00 00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=reel.d -
oreel.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST
\STM32F10x --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --list=r
eel.lst reel.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

loop 0000000C

Symbol: loop
   Definitions
      At line 25 in file reel.asm
   Uses
      At line 41 in file reel.asm
Comment: loop used once
m2 0000003A

Symbol: m2
   Definitions
      At line 50 in file reel.asm
   Uses
      At line 4 in file reel.asm
Comment: m2 used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 2 in file reel.asm
   Uses
      None
Comment: moncode unused
part 00000000

Symbol: part
   Definitions
      At line 9 in file reel.asm
   Uses
      At line 3 in file reel.asm
      At line 57 in file reel.asm
      At line 65 in file reel.asm

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TabCos 00000000

Symbol: TabCos
   Definitions
      At line 6 in file reel.asm
   Uses
      At line 53 in file reel.asm
Comment: TabCos used once
TabSin 00000000

Symbol: TabSin
   Definitions
      At line 5 in file reel.asm
   Uses
      At line 64 in file reel.asm
Comment: TabSin used once
2 symbols
340 symbols in table
